TODO
/BatchNomalization
/gridsearchCV
/NSGA2
/kerasregression
/Nomalization_deap5
/pyinstaller
/kivy
/tkinter




組成→物性予測はNNで実装する
（フッ化物硝子も含めるか。。）

１つのCSVデータからそれぞれの物性値に対するNNを一気に作りたい
”初期実装ではこれはしない”

Glass or Glass+Ceramics のふたつを見分けるNN、CSVデータも必要
”これは必要”
Meltのデータはここでは無視する、CSVから削除
”これもOK”

組成データ＋密度
組成データ＋粘度
・・・
のように物性値ごとにデータをわけて、NAN値を含む行を削除する
ここでのデータはGlass,（Melt）のデータを用いる
Ion Exchanged のデータは除外
Heat treatment のデータはとりあえず採用


物性値に関しては、CSVにおける順番とINTERGLADのID、項目名で管理して
(0, 0510,DensityatRT）、（1,0050,ShearModulus）と管理用のリストを作成しておくとよいかも、むしろ読み込むCSVファイルから管理リストを作成できるようにしておかないと後々困るか
”これもあとで実装”


組成と
物性値ごとに作製したNNのモデルをmodel_0-0510-DensityatRT.h5　のように保存しておく
”とりあえず５物性での実装をめざす”
密度、ポアソン比、破壊靭性値、アッベ数、ヤング率


物性→組成設計は遺伝的アルゴリズムで実装する

遺伝子を1000個準備して、各遺伝子が0.1%の組成に対応する。
(例)SiO2遺伝子が250個→組成比25%、K2O遺伝子が100個→組成比10%

遺伝子を1000個有する個体を1000個程度作製して、
各個体を遺伝子から組成比へと変換、NNで特性を予測する。
特性の良いものを次世代に残し、交叉させていく

＊個体の作成方法について

必要組成のIDを決定
Necessarycomponent = [0,1,3,5,6,7]

必要組成のみを遺伝子として有する初期個体を作製する
numpy.random.choice[Necessarycomponent,size=1000,replace=true,p=weight]
”初期実装でいれても良いけど。。”

参考にする元組成がある場合、初期個体を元組成に近づけて作製してもよい
weight=[0.64,0.12,0.14,0.02,0.03,0.05]

一部の組成のみ数値限定したいなら、下記のようにしてもよい
weight = numpy.random.rand(5,1)
weight[0]=0.64
sum=numpy.sum(weight[1:6]
weight[1:6]=weight[1:6]*(1-0.64)/sum

SiO2のみ0.64で他はランダムな組成を作成できる


もしくは全計算機能をつけるか。
遺伝的アルゴリズムは用いず、数種類の可変組成からなる全個体を計算させる。
あまり多すぎると無理だろう。

import itertools


l=range.(0,201,1)
ll=[x/2.0 for x in l]

	for c in itertools.product(ll,ll,ll):

	    if sum(c)==100:
        
		print(c)




＊個体の適応度計算について

GAの評価関数
①ガラス化するかどうか（Glass or Glass-ceramic）
①設定した５物性値に近いかどうか
②組成数が多すぎないか、少なすぎないか

練習問題として、SiO2が７０％、Al2Oが２０％、K2Oが１０％の個体を見つけよ
って問題が単純でよいかも

各物性値の5段階で優先順位をつけてもよい
５：優先度高、４、３、２、１：優先度低
"初期実装では全ての優先度を等しくする、優先度は実装しない"

Aを必ず含む、含んでも良い、含まない方が良い、含んではいけない
SiO2は50％以上、

選択した組成のみで最適化
（Si、Na、Mｇは必ず含む、Pb、Sr、Feは含んではいけない。に自動でチェックをいれる）

組成の合計数が少なすぎ、多すぎないか（自由選択、推奨は4-12）
３組成から

ガラス形成能の評価
（INTERGLADに頻出するデータに近ければガラス形成能あり、もしくは一般的
あまり出てこないデータは何らかのデメリットあり）
もしくは臨界冷却速度を解析するとか？
Rate of nucleation
Velocity of Cryst growth


kivyでGUI化できると見栄えが良い

tkinter　でチェックボックス出すだけでも十分か？
組成要否のチェックボックス
目標特性値とその要否

探索条件の保存と読み込み
ぐらいあれば充分？











さらにpyinstallerでexe化できれば配布も可能。。